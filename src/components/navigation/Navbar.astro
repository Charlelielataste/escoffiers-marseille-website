---
import { cn } from "@/lib/utils";
import BarMobileIcon from "@/components/icons/BarMobileIcon.astro";
import CloseIcon from "@/components/icons/CloseIcon.astro";
import { Image } from "astro:assets";
import {
  getNavUrls,
  getTranslations,
  getAlternateLanguageUrl,
  type Locale,
} from "@/lib/i18n";
import FrenchFlagIcon from "@/components/icons/FrenchFlagIcon.astro";
import EnglishFlagIcon from "@/components/icons/EnglishFlagIcon.astro";

export interface Props {
  currentPath?: string;
  multilingualUrls?: {
    fr: string;
    en: string;
  };
}

const { currentPath = "/", multilingualUrls } = Astro.props;

const currentLocale = (Astro.currentLocale || "fr") as Locale;
const navUrls = getNavUrls(currentLocale);
const t = getTranslations(currentLocale);

// URLs pour changer de langue - utiliser les URLs multilingues personnalisées si disponibles
const frUrl =
  multilingualUrls?.fr || getAlternateLanguageUrl(currentPath, "fr");
const enUrl =
  multilingualUrls?.en || getAlternateLanguageUrl(currentPath, "en");

const getLinkClasses = (isActive: boolean) => {
  return cn(
    "text-sm py-1 font-medium transition-colors flex items-center justify-center",
    isActive ? "text-primary font-bold" : "text-text-primary hover:text-primary"
  );
};

const getMobileLinkClasses = (isActive: boolean) => {
  return cn(
    "block px-3 py-2 rounded-md text-base font-medium transition-colors",
    isActive
      ? "text-primary font-bold bg-primary/10"
      : "text-gray-700 hover:text-gray-900 hover:bg-gray-50"
  );
};
---

<!-- Overlay for the mobile menu -->
<div
  id="mobile-menu-overlay"
  class="fixed h-[100vh] w-screen bg-black/40 z-40 md:hidden opacity-0 pointer-events-none transition-opacity duration-300 ease-in-out"
>
</div>

<nav
  class="bg-white shadow-md fixed top-0 left-0 right-0 z-50 border-b border-primary/30"
>
  <div class="max-w-7xl lg:mx-auto sm:px-4 lg:px-8">
    <div
      class="flex justify-between px-4 gap-x-4 lg:px-0 items-center h-[60px] sm:h-[70px]"
    >
      <!-- Logo on the left -->
      <div class="flex-shrink-0">
        <a
          href={navUrls.home}
          class="flex items-center justify-center w-16 lg:w-24 h-[50px]"
        >
          <Image
            src="/logos/logo-face-color.png"
            alt="Logo des Disciples des Escoffiers"
            width="40"
            height="40"
            class="w-[35px] lg:w-[40px]"
            loading="eager"
          />
        </a>
      </div>

      <!-- Centered links - Desktop -->
      <div class="hidden md:flex md:flex-wrap items-baseline gap-x-6">
        <a
          href={navUrls.about}
          class={cn(
            getLinkClasses(navUrls.about === currentPath),
            currentLocale === "fr" ? "w-[63px]" : "w-12"
          )}
        >
          {t.nav.about}
        </a>
        <a
          href={navUrls.articles}
          class={cn(getLinkClasses(currentPath.includes("articles")), "w-14")}
        >
          {t.nav.articles}
        </a>
        <a
          href={navUrls.events}
          class={cn(
            getLinkClasses(
              currentPath.includes(
                currentLocale === "fr" ? "evenements" : "events"
              )
            ),
            currentLocale === "fr" ? "w-20" : "w-12"
          )}
        >
          {t.nav.events}
        </a>
        <a
          href={navUrls.members}
          class={cn(
            getLinkClasses(navUrls.members === currentPath),
            currentLocale === "fr" ? "w-[85px]" : "w-[88px]"
          )}
        >
          {t.nav.members}
        </a>
        <a
          href={navUrls.partners}
          class={cn(
            getLinkClasses(navUrls.partners === currentPath),
            currentLocale === "fr" ? "w-[102px]" : "w-[85px]"
          )}
        >
          {t.nav.partners}
        </a>
        <a
          href={navUrls.contact}
          class={cn(
            getLinkClasses(navUrls.contact === currentPath),
            currentLocale === "fr" ? "w-[100px]" : "w-14"
          )}
        >
          {t.nav.contact}
        </a>
      </div>

      <!-- Switch language - Desktop -->
      <div class="hidden md:flex w-24 items-center justify-center gap-x-1">
        <a
          href={frUrl}
          aria-label="Langue Française"
          class={cn(
            "px-2 py-1 rounded w-10 h-[32px] flex items-center border border-tertiary/40 justify-center hover:bg-tertiary/40",
            currentLocale === "fr" && "bg-tertiary/40 text-white"
          )}
        >
          <FrenchFlagIcon />
        </a>
        <span class="text-black px-1">|</span>
        <a
          href={enUrl}
          aria-label="English Language"
          class={cn(
            "px-2 py-1 rounded w-10 h-[32px] flex items-center border border-tertiary/40 justify-center hover:bg-tertiary/40",
            currentLocale === "en" && "bg-tertiary/40 text-white"
          )}
        >
          <EnglishFlagIcon />
        </a>
      </div>

      <!-- Mobile Menu Button -->
      <div class="md:hidden">
        <button id="mobile-menu-toggle" class="p-2 relative" aria-label="Menu">
          <div
            id="hamburger-icon"
            class="text-primary transition-all duration-300 ease-in-out"
          >
            <BarMobileIcon size="24" class="text-primary" />
          </div>
          <div
            id="close-icon"
            class="text-primary transition-all duration-300 ease-in-out opacity-0 absolute top-2 left-2"
          >
            <CloseIcon size="24" class="text-primary" />
          </div>
        </button>
      </div>
    </div>

    <!-- Menu Mobile -->
    <div
      id="mobile-menu"
      class="md:hidden overflow-hidden transition-all duration-300 ease-in-out max-h-0"
      style="transition-property: max-height, opacity; max-height: 0;"
    >
      <div
        class="px-4 pt-2 pb-3 space-y-1 sm:px-3 bg-white border-t border-primary/40"
      >
        <a
          href={navUrls.home}
          class={getMobileLinkClasses(navUrls.home === currentPath)}
        >
          {t.nav.home}
        </a>
        <a
          href={navUrls.about}
          class={getMobileLinkClasses(navUrls.about === currentPath)}
        >
          {t.nav.about}
        </a>
        <a
          href={navUrls.articles}
          class={getMobileLinkClasses(currentPath.includes("articles"))}
        >
          {t.nav.articles}
        </a>
        <a
          href={navUrls.events}
          class={getMobileLinkClasses(currentPath.includes("events"))}
        >
          {t.nav.events}
        </a>
        <a
          href={navUrls.members}
          class={getMobileLinkClasses(navUrls.members === currentPath)}
        >
          {t.nav.members}
        </a>
        <a
          href={navUrls.partners}
          class={getMobileLinkClasses(navUrls.partners === currentPath)}
        >
          {t.nav.partners}
        </a>
        <a
          href={navUrls.contact}
          class={getMobileLinkClasses(navUrls.contact === currentPath)}
        >
          {t.nav.contact}
        </a>

        <!-- Switch language Mobile -->
        <div
          class="pt-4 px-3 flex items-center justify-between border-t border-primary/40"
        >
          <p class="text-sm text-black">Langue / Language</p>
          <div class="flex gap-x-3">
            <a
              aria-label="Langue Française"
              href={frUrl}
              class={cn(
                "px-2 py-1 rounded w-10 h-[32px] flex items-center border border-tertiary/40 justify-center",
                currentLocale === "fr" && "bg-tertiary/40 text-white"
              )}
            >
              <FrenchFlagIcon />
            </a>
            <a
              aria-label="English Language"
              href={enUrl}
              class={cn(
                "px-2 py-1 rounded w-10 h-[32px] flex items-center border border-tertiary/40 justify-center",
                currentLocale === "en" && "bg-tertiary/40 text-white"
              )}
            >
              <EnglishFlagIcon />
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</nav>

<script>
  document.addEventListener("astro:page-load", function () {
    const mobileMenuToggle = document.getElementById("mobile-menu-toggle");
    const mobileMenu = document.getElementById("mobile-menu");
    const mobileMenuOverlay = document.getElementById("mobile-menu-overlay");
    const hamburgerIcon = document.getElementById("hamburger-icon");
    const closeIcon = document.getElementById("close-icon");

    if (
      mobileMenuToggle &&
      mobileMenu &&
      mobileMenuOverlay &&
      hamburgerIcon &&
      closeIcon
    ) {
      let isMenuOpen = false;

      const openMenu = () => {
        isMenuOpen = true;

        mobileMenu.style.maxHeight = mobileMenu.scrollHeight + "px";
        mobileMenu.style.opacity = "1";

        mobileMenuOverlay.style.opacity = "1";
        mobileMenuOverlay.style.pointerEvents = "auto";

        hamburgerIcon.style.opacity = "0";
        hamburgerIcon.style.transform = "rotate(180deg) scale(0.8)";

        closeIcon.style.opacity = "1";
        closeIcon.style.transform = "rotate(0deg) scale(1)";
      };

      const closeMenu = () => {
        isMenuOpen = false;

        mobileMenu.style.maxHeight = "0px";
        mobileMenu.style.opacity = "0";

        mobileMenuOverlay.style.opacity = "0";
        mobileMenuOverlay.style.pointerEvents = "none";

        hamburgerIcon.style.opacity = "1";
        hamburgerIcon.style.transform = "rotate(0deg) scale(1)";

        closeIcon.style.opacity = "0";
        closeIcon.style.transform = "rotate(-180deg) scale(0.8)";
      };

      mobileMenuToggle.addEventListener("click", () => {
        if (isMenuOpen) {
          closeMenu();
        } else {
          openMenu();
        }
      });

      mobileMenuOverlay.addEventListener("click", () => {
        if (isMenuOpen) {
          closeMenu();
        }
      });

      const mobileLinks = mobileMenu.querySelectorAll("a");
      mobileLinks.forEach((link) => {
        link.addEventListener("click", () => {
          if (isMenuOpen) {
            closeMenu();
          }
        });
      });
    }
  });
</script>

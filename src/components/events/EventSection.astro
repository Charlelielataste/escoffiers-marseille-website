---
import EventCard from "@/components/events/EventCard.astro";

import { getAllEvents } from "@/lib/sanity-queries";
import { urlFor, type Event } from "@/lib/sanity";
import { formatDateTime } from "@/lib/date";
import { getTranslations, type Locale } from "@/lib/i18n";

const events = await getAllEvents();
const currentLocale = (Astro.currentLocale || "fr") as Locale;
const localeTimeFormat = currentLocale === "fr" ? "fr-FR" : "en-US";

function groupEventsByMonth(events: Event[]) {
  const grouped = events.reduce(
    (acc, event) => {
      const date = new Date(event.date);
      const monthYear = date.toLocaleDateString(localeTimeFormat, {
        year: "numeric",
        month: "long",
      });

      if (!acc[monthYear]) {
        acc[monthYear] = [];
      }
      acc[monthYear].push(event);

      return acc;
    },
    {} as Record<string, typeof events>
  );

  Object.keys(grouped).forEach((monthYear) => {
    grouped[monthYear].sort(
      (a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()
    );
  });

  const sortedGroups = Object.entries(grouped).sort(
    ([monthYearA], [monthYearB]) => {
      const dateA = new Date(grouped[monthYearA][0].date);
      const dateB = new Date(grouped[monthYearB][0].date);
      return dateB.getTime() - dateA.getTime();
    }
  );

  return sortedGroups;
}

const groupedEvents = groupEventsByMonth(events);
const t = getTranslations(currentLocale);
---

<section class="relative bg-white py-10">
  {
    groupedEvents.length === 0 ? (
      <div class="max-w-5xl mx-auto px-5">
        <p class="text-gray-600 text-center text-lg font-bold py-10 pt-8">
          {t.events.noEvents}
        </p>
        <p class="text-gray-600 text-center text-lg font-bold pb-8">
          {t.events.noEventsDescription}
        </p>
      </div>
    ) : (
      <div class="max-w-5xl mx-auto px-5">
        {groupedEvents.map(([monthYear, events], groupIndex) => (
          <div class="mb-0 md:mb-2">
            <div class="text-center mb-12">
              <h2 class="sm:text-4xl text-3xl font-bold text-gray-800 mb-4">
                {monthYear.charAt(0).toUpperCase() + monthYear.slice(1)}
              </h2>
              <hr class="w-24 h-1 bg-primary mx-auto rounded-full" />
            </div>

            <div class="grid grid-cols-1 sm:grid-cols-2 gap-5 mb-8">
              {events.map((event) => (
                <EventCard
                  title={event.title[currentLocale]}
                  slug={event.slug[currentLocale].current}
                  date={formatDateTime(new Date(event.date), localeTimeFormat)}
                  location={event.location}
                  image={urlFor(event.image).width(1200).height(800).url()}
                  description={event.intro[currentLocale]}
                  locale={currentLocale}
                />
              ))}
            </div>

            {groupIndex < groupedEvents.length - 1 && (
              <div class="flex items-center justify-center my-12">
                <div class="flex-grow h-px bg-gray-300" />
                <div class="mx-4">
                  <div class="w-3 h-3 bg-primary rounded-full" />
                </div>
                <div class="flex-grow h-px bg-gray-300" />
              </div>
            )}
          </div>
        ))}
      </div>
    )
  }
</section>

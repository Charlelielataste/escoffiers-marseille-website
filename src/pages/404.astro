---
import Layout from "@/layouts/Layout.astro";
import { getTranslations, type Locale } from "@/lib/i18n";
import { Image } from "astro:assets";
import Image404 from "@/assets/hero/404.png";
import Hero from "@/components/Hero.astro";

const locale = (Astro.currentLocale || "fr") as Locale;
const t = getTranslations(locale);
---

<Layout>
  <Hero picture={Image404} pictureAlt="404" has_scroll_indicator={false}>
    <div class="absolute inset-0 bg-black/30"></div>
    <div
      class="text-center relative bg-white h-fit rounded-2xl shadow-2xl z-10 max-w-4xl sm:mx-auto py-6 px-4 mx-4"
    >
      <div class="flex justify-center items-center gap-2 lg:gap-3 mb-8">
        <h1
          class="text-primary lg:text-5xl text-3xl font-bold"
          aria-label="404"
        >
          4
        </h1>

        <div class="utensil-animation w-6 h-6 lg:w-10 lg:h-10">
          <Image
            src="/icons/fork-spoon-rounded.svg"
            alt={"Fork and Spoon"}
            width={40}
            height={40}
            class="animate-spin-slow"
            loading="eager"
          />
        </div>
        <span class="text-primary lg:text-5xl text-3xl font-bold">4</span>
      </div>

      <h2
        id="404-heading"
        class="text-3xl md:text-4xl font-bold text-black mb-6"
      >
        {t.notFound.heading}
      </h2>

      <p
        id="404-description"
        class="text-lg md:text-xl text-primary-accessible mb-8 lg:mb-8 max-w-2xl mx-auto"
      >
        {t.notFound.description}
      </p>

      <div
        class="flex flex-col sm:flex-row gap-4 justify-center items-center w-full"
      >
        <a
          id="404-home-button"
          href={locale === "fr" ? "/" : "/en/"}
          class="bg-primary text-bordered-light text-white w-full py-3 rounded-lg font-semibold hover:bg-primary/90 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
        >
          {t.notFound.homeButton}
        </a>

        <a
          id="404-report-button"
          href="mailto:contact@disciplesescoffier-provence-mediterranee.org?subject=Signalement%20de%20problème%20sur%20le%20site"
          aria-label={t.notFound.reportButton}
          class="bg-secondary text-bordered-light text-white py-3 w-full rounded-lg font-semibold hover:bg-secondary/90 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
        >
          {t.notFound.reportButton}
        </a>
      </div>
    </div>
  </Hero>
</Layout>

<script>
  document.addEventListener("astro:page-load", function () {
    const currentPath = window.location.pathname;
    const isEnglish = currentPath.startsWith("/en");

    const translations = {
      fr: {
        heading: "Oups ! Cette page n'existe pas...",
        description:
          "Pas de panique ! Il semble que vous ayez cherché une page qui n'est pas ou n'est plus disponible sur notre site !",
        homeButton: "Retour à l'accueil",
        reportButton: "Signaler un problème",
      },
      en: {
        heading: "Oops! This page doesn't exist...",
        description:
          "Don't panic! It seems you've been looking for a page that's not or is no longer available on our site!",
        homeButton: "Back to home",
        reportButton: "Report a problem",
      },
    };

    const t = translations[isEnglish ? "en" : "fr"];

    const heading = document.querySelector("#404-heading");
    const description = document.querySelector("#404-description");
    const homeButton = document.querySelector("#404-home-button");
    const reportButton = document.querySelector("#404-report-button");

    if (heading && heading.textContent?.trim() !== t.heading) {
      heading.textContent = t.heading;
    }

    if (description && description.textContent?.trim() !== t.description) {
      description.textContent = t.description;
    }

    if (homeButton && homeButton.textContent?.trim() !== t.homeButton) {
      homeButton.textContent = t.homeButton;
      homeButton.setAttribute("href", isEnglish ? "/en/" : "/");
    }

    if (reportButton && reportButton.textContent?.trim() !== t.reportButton) {
      reportButton.textContent = t.reportButton;
    }
  });
</script>

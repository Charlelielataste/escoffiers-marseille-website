---
import Layout from "@/layouts/Layout.astro";
import { getCollection } from "astro:content";
import type { Locale } from "@/lib/i18n";
import { formatDate } from "@/lib/date";

export async function getStaticPaths() {
  const articles = await getCollection("articles");
  const paths = [];

  for (const article of articles) {
    for (const locale of ["fr", "en"] as Locale[]) {
      // Vérifier que l'article a une version dans cette locale
      if (article.data[locale]) {
        paths.push({
          params: {
            locale,
            slug: article.id,
          },
          props: { article },
        });
      }
    }
  }

  return paths;
}

const { article } = Astro.props;
const { locale } = Astro.params as { locale: Locale };

const allTags = await getCollection("tags");

const findTag = (tags: string[]) => {
  return tags.map((tag) => allTags.find((t) => t.slug === tag));
};

// Données localisées de l'article
const articleData = article.data[locale];
---

<Layout title={articleData.title}>
  <article class="max-w-6xl mx-auto px-6 py-20">
    <div class="mb-6 mt-4">
      <button
        onclick="history.back()"
        class="inline-flex items-center text-sm gap-2 bg-primary text-white px-5 py-2 rounded-full font-semibold transition-all duration-300 transform hover:scale-[1.02] shadow-md"
      >
        ← Retour aux articles
      </button>
    </div>
    <!-- Image en haut -->
    <div class="mb-8">
      <img
        src={articleData.image}
        alt={articleData.title}
        class="w-full h-96 object-cover rounded-2xl shadow-lg"
      />
    </div>

    <!-- Date -->
    <div class="mb-6">
      <time
        datetime={new Date(articleData.date).toISOString()}
        class="text-gray-600 text-lg font-medium"
      >
        {formatDate(new Date(articleData.date), locale)}
      </time>
    </div>

    <!-- Titre -->
    <h1 class="text-4xl md:text-5xl font-bold text-primary mb-8 leading-tight">
      {articleData.title}
    </h1>

    <!-- Tags -->
    <div class="flex flex-wrap gap-3 mb-8">
      {
        findTag(articleData.tags || []).map((tag) => (
          <span class="bg-secondary text-white py-2 px-4 rounded-full text-sm font-semibold shadow-sm">
            {tag?.data[locale].title}
          </span>
        ))
      }
    </div>

    <!-- Introduction -->
    <div class="mb-12">
      <div
        class="text-xl text-gray-700 leading-relaxed font-medium bg-white p-8 rounded-2xl shadow-sm border border-gray-100"
      >
        {articleData.intro}
      </div>
    </div>

    <!-- Contenu principal -->
    <div
      class="prose prose-lg prose-a:text-blue-500 prose-a:font-bold prose-h1:text-primary prose-h1:font-bold prose-h2:text-primary prose-black max-w-none bg-white p-8 rounded-2xl shadow-sm border border-gray-100"
    >
      <div set:html={articleData.body} />
    </div>
  </article>
</Layout>
